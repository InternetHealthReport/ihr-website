name: PR Validation

on:
  pull_request:
    types: [edited, opened, synchronize, reopened]
    branches: ["*"]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check if secrets are available (e.g., for forks)
        id: check_secrets
        run: |
          if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "has_secrets=false" >> $GITHUB_ENV
          else
            echo "has_secrets=true" >> $GITHUB_ENV
          fi

      - name: Validate PR Template and Linked Issues
        run: |
          pr_body="${{ github.event.pull_request.body }}"
          pr_author="${{ github.event.pull_request.user.login }}"
          pr_number="${{ github.event.pull_request.number }}"

          echo "Starting PR validation for PR #${pr_number} by ${pr_author}"

          # Basic checks for PR template
          if [[ "$pr_body" != *"## Description"* ]] || [[ "$pr_body" != *"## Related issue"* ]]; then
            echo "PR template not respected. Exiting."
            exit 2
          fi

          # Check if thereâ€™s a linked issue
          issue_numbers=$(echo "$pr_body" | grep -o '#[0-9]\+' | cut -d'#' -f2)
          if [ -z "$issue_numbers" ]; then
            echo "No linked issues found. Exiting."
            exit 3
          fi

          # Output issue numbers for debugging purposes
          echo "Linked issues found: $issue_numbers"
      
      - name: Clear Labels (Only if secrets are available)
        if: env.has_secrets == 'true'
        run: |
          pr_number=${{ github.event.pull_request.number }}
          labels=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/labels" | jq -r '.[].name // empty')
          for label in $labels; do
            curl -s -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/labels/$label"
          done

      - name: Add Comment to PR (Only if secrets are available)
        if: env.has_secrets == 'true'
        run: |
          message="Hello @${pr_author}, your PR has been validated successfully."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\":\"$message\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
